version: 2.1
orbs:
    ggshield: gitguardian/ggshield@1.1.4
    snyk: snyk/snyk@1.2.3

jobs:
    plan:
        docker:
            - image: cloudposse/geodesic:latest
        steps:
            - checkout
            - run:
                  name: terraform plan
                  command: |
                      cd terraform
                      terraform init -input=false
                      terraform plan -input=false -compact-warnings -out=plan.file
                      terraform show -json plan.file > plan.json
            - store_artifacts:
                  path: plan.json

    deploy:
        docker:
            - image: cloudposse/geodesic:latest
        steps:
            - checkout
            - run:
                  name: add helm repos
                  command: |
                      helm repo add grafana https://grafana.github.io/helm-charts
                      helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
                      helm repo add eks https://aws.github.io/eks-charts
                      helm repo update
            - run:
                  name: terraform apply
                  command: |
                      cd terraform
                      terraform init -input=false
                      terraform apply -input=false -compact-warnings -auto-approve

workflows:
    build:
        jobs:
            - ggshield/scan:
                  name: ggshield-scan
                  base_revision: << pipeline.git.base_revision >>
                  revision: <<pipeline.git.revision>>
            - snyk/scan-iac:
                  args: '--severity-threshold=medium'
            - deploy:
                  name: deploy-stage
                  context: stage
            - plan:
                  name: plan-prod
                  context: prod
            - hold:
                  type: approval
                  filters:
                      branches:
                          only: main
                  requires:
                      - plan-prod
            - deploy:
                  name: deploy-prod
                  context: prod
                  filters:
                      branches:
                          only: main
                  requires:
                      - snyk/scan-iac
                      - deploy-stage
                      - hold
